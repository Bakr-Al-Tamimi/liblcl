#[ 
   The code is automatically generated by the genBind tool. 
   Author: ying32
   https://github.com/ying32  
]#

type
{{range $el := .BaseTypes}}
  {{if not (isEmpty $el.FieldArch)}}
when defined({{$el.FieldArch}}):
  {{end}}
  {{if eq $el.Kind "struct"}}
  {{$el.Name}}* = object
    {{range $field := $el.Fields}}
    {{covKeyword $field.Name}}: {{if $field.IsArr}}array[0..{{Dec $field.ArrLength}}, {{end}}{{covType $field.Type}}{{if $field.IsArr}}]{{end}}
    {{end}}
  {{else if eq $el.Kind "set"}}
  {{$el.Name}}* = set[{{$el.SetOf}}]
  {{else}}
  {{$el.Name}}* = {{covType $el.Type}}
  {{end}}
{{end}}

{{range $el := .Types}}
  {{if eq $el.Kind "struct"}}
  {{$el.Name}}* = object
    {{range $field := $el.Fields}}
    {{covKeyword $field.Name}}: {{if $field.IsArr}}array[0..{{Dec $field.ArrLength}}, {{end}}{{covType $field.Type}}{{if $field.IsArr}}]{{end}}
    {{end}}
  {{else if eq $el.Kind "enum"}}
  {{$el.Name}}* = enum
    {{range $enum := $el.Enums}}
    {{$enum.Name}}{{if not (isEmpty $enum.Value)}} = {{$enum.Value}}{{end}},{{if not (isEmpty $enum.Comment)}} # {{$enum.Comment}}{{end}}
    {{end}}
  {{else if eq $el.Kind "set"}}
  {{$el.Name}}* = set[{{$el.SetOf}}]
  {{else}}
  {{$el.Name}}* = {{covType $el.Type}}
  {{end}}
{{end}}

{{range $el := .Events}}
  {{if isEmpty $el.ReDefine}}
  {{$el.Name}}* = proc({{range $idx, $ps := $el.Params}}{{if gt $idx 0}}, {{end}}{{$ps.Name}}: {{if isObject $ps.Type}}pointer{{else}}{{if $ps.IsVar}}var {{end}}{{covType $ps.Type}}{{end}}{{end}}) {.nimcall.}
  {{else}}
  {{$el.Name}}* = {{$el.ReDefine}}
  {{end}}
{{end}}