#[
   The code is automatically generated by the genBind tool.
   Author: ying32
   https://github.com/ying32
]#
{.experimental: "codeReordering".}
##
##
import liblcl, vcl, types, strutils
##

##
proc ShowMessageFmt*(formatstr: string, a: varargs[string, `$`]) =
  ShowMessage(strutils.format(formatstr, a))
##
proc GetFPStringArrayMember*(p: pointer, index: int): string =
  return $DGetStringArrOf(p, index)
##
proc SelectDirectory*(Directory: var string, Options: TSelectDirOpts, HelpCtx: int32): bool =
  var ps1: cstring = Directory
  result = DSelectDirectory1(ps1, Options, HelpCtx)
  Directory = $ps1
##
proc SelectDirectory*(Caption: string, Root: string, AShowHidden: bool, Directory: var string): bool =
  var ps4: cstring = Directory
  result = DSelectDirectory2(Caption, Root, AShowHidden, ps4)
  Directory = $ps4
##
proc InputQuery*(ACaption: string, APrompt: string, Value: string, AOut: var string): bool =
  var ps4: cstring = AOut
  result = DInputQuery(ACaption, APrompt, Value, ps4)
  AOut = $ps4
##
{{define "getps1"}}{{range $idx, $ps := .Params}}{{if gt $idx 0}}, {{end}}{{$ps.Name}}: {{if $ps.IsVar}}{{if ne $ps.Flag "nonPtr"}}var {{end}}{{end}}{{covType2 $ps.Type}}{{end}}{{end}}
{{define "getps2"}}{{range $idx, $ps := .Params}}{{if gt $idx 0}}, {{end}}{{if isObject $ps.Type}}CheckPtr({{end}}{{if ne $ps.Flag "nonPtr"}}{{$ps.Name}}{{else}}ps{{$idx}}{{end}}{{if isObject $ps.Type}}){{end}}{{end}}{{end}}
{{define "emptyStr"}}{{if ne .Platform "all"}}  {{end}}{{end}}

{{range $el := .Functions}}
  {{if not (inStrArray $el.Name "DGetStringArrOf" "DSynchronize" "DMove" "DStrLen" "SetEventCallback" "SetThreadSyncCallback" "SetMessageCallback" "DSelectDirectory2" "DSelectDirectory1" "DInputQuery")}}
    {{if not (contains $el.Name "_Instance")}}
##
{{if eq $el.Platform "windows"}}when defined(windows):{{end}}
{{if eq $el.Platform "linux,macos"}}when not defined(windows):{{end}}
{{if eq $el.Platform "macos"}}when defined(macosx):{{end}}
{{if eq $el.Platform "linux"}}when defined(linux):{{end}}
{{template "emptyStr" $el}}proc {{delDChar $el.Name}}*({{template "getps1" $el}}){{if not (isEmpty $el.Return)}}: {{covType2 $el.Return}}{{end}} =
  {{/*这里生成不需要var的变量*/}}
  {{range $ips, $ps := $el.Params}}
    {{if and ($ps.IsVar) (eq $ps.Flag "nonPtr")}}
{{template "emptyStr" $el}}  var ps{{$ips}} = {{$ps.Name}}
    {{end}}
  {{end}}
{{template "emptyStr" $el}}  {{if not (isEmpty $el.Return)}}return {{end}}{{if eq $el.Return "string"}}${{end}}{{$el.Name}}({{template "getps2" $el}}){{if isObject $el.Return}}.As{{rmObjectT $el.Return}}{{end}}
    {{end}}
  {{end}}
{{end}}